package com.example.greyscaler.phonerecord;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.database.Cursor;import android.net.Uri;import android.provider.ContactsContract;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.telephony.TelephonyManager;import android.widget.Toast;import java.sql.Date;public class myPhoneCallReciever extends BroadcastReceiver {    private Contact contact;    @Override       public void onReceive(Context context, Intent intent) {//        int lastState = TelephonyManager.CALL_STATE_IDLE;//        Date callStartTime;//        boolean isIncoming;        String savedNumber; //because the passed incoming is only valid in ringing        //we listen two intents the first one is the one that is going to capture       //the outgoing calls        try {            String state = intent.getStringExtra(TelephonyManager.EXTRA_STATE);            DatabaseHandler db = new DatabaseHandler(context);//                if (intent.getAction().equals("android.intent.action.NEW_OUTGOING_CALL")) {//                    savedNumber = intent.getStringExtra("android.intent.action.PHONE_NUMBER");//                } else {//                    String stateStr = intent.getStringExtra(TelephonyManager.EXTRA_STATE);//                    //String number = intent.getStringExtra(TelephonyManager.EXTRA_INCOMING_NUMBER);//                    //int state = 0;//////                    if (stateStr.equals(TelephonyManager.EXTRA_STATE_IDLE)) {//                        Toast.makeText(context, "Call idle State", Toast.LENGTH_SHORT).show();////                        //state = TelephonyManager.CALL_STATE_IDLE;////                    } else if (stateStr.equals(TelephonyManager.EXTRA_STATE_OFFHOOK)) {////                        Toast.makeText(context, "Call Recieved State", Toast.LENGTH_SHORT).show();//                        //state = TelephonyManager.CALL_STATE_OFFHOOK;////                    } else if (stateStr.equals(TelephonyManager.EXTRA_STATE_RINGING)) {////                        Toast.makeText(context, "Incoming Call State ", Toast.LENGTH_SHORT).show();//                        //state = TelephonyManager.CALL_STATE_RINGING;//                    } //               }            if(state.equals(TelephonyManager.EXTRA_STATE_RINGING)){                String number = intent.getStringExtra(TelephonyManager.EXTRA_INCOMING_NUMBER);                String name = getContactName(number, context);                Toast.makeText(context,"Ringing State Number is -" + number + "Name" + name,                        Toast.LENGTH_SHORT).show();                //as the phone is ringing                //save in the database                db.addContact(new Contact(name, number));            }            if ((state.equals(TelephonyManager.EXTRA_STATE_OFFHOOK))){                Toast.makeText(context,"Received State",Toast.LENGTH_SHORT).show();                String number = intent.getStringExtra(TelephonyManager.EXTRA_INCOMING_NUMBER);                String name = getContactName(number, context);                db.addContact(new Contact(name, number));            }            if (state.equals(TelephonyManager.EXTRA_STATE_IDLE)){                Toast.makeText(context,"Idle State: Phone call Ended",Toast.LENGTH_SHORT).show();            }            }catch(Exception e){                e.printStackTrace();            }        }    public String getContactName(final String phoneNumber, Context context)    {        Uri uri=Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI,Uri.encode(phoneNumber));        String[] projection = new String[]{ContactsContract.PhoneLookup.DISPLAY_NAME};        String contactName="";        Cursor cursor=context.getContentResolver().query(uri,projection,null,null,null);        if (cursor != null) {            if(cursor.moveToFirst()) {                contactName=cursor.getString(0);            }            cursor.close();        }        return contactName;    }    }